/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package application.form;

import application.Database;
import entities.Map;
import graphics.DrawableCell;
import graphics.DrawableGrid;
import graphics.DrawableObject;
import java.awt.Desktop;
import java.awt.Graphics;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JComponent;
import javax.swing.JFileChooser;
import javax.swing.plaf.PanelUI;

/**
 *
 * @author 2014130020
 */
public class FormExport extends javax.swing.JDialog {

    private File dir;

    /**
     * Creates new form FormExport
     *
     * @param parent
     * @param modal
     */
    public FormExport(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        dir = new File("/");
        txtPathBrowser.setText(dir.getAbsolutePath());
    }

    private DrawableGrid grid;

    public void setPrint(final DrawableGrid grid) {
        this.grid = grid;

        // create preview
        panelPreview.setUI(new PanelUI() {

            @Override
            public void paint(Graphics g, JComponent c) {
                super.paint(g, c);
                g.drawImage(grid.createImage(), 0, 0, c.getWidth(), c.getHeight(), null);
            }

        });

        panelPreview.repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        groupExportAs = new javax.swing.ButtonGroup();
        panelButton = new javax.swing.JPanel();
        btnExport = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        panelRegister = new javax.swing.JPanel();
        panelPreview = new javax.swing.JPanel();
        lbPreview = new javax.swing.JLabel();
        lbDirectory = new javax.swing.JLabel();
        txtPathBrowser = new javax.swing.JTextField();
        btnBrowser = new javax.swing.JButton();
        lbExportAs = new javax.swing.JLabel();
        radioTXT = new javax.swing.JRadioButton();
        radioPNG = new javax.swing.JRadioButton();
        radioGIF = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        panelButton.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnExport.setText("Export");
        btnExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportActionPerformed(evt);
            }
        });
        panelButton.add(btnExport);

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });
        panelButton.add(btnCancel);

        panelPreview.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        panelPreview.setPreferredSize(new java.awt.Dimension(400, 350));

        javax.swing.GroupLayout panelPreviewLayout = new javax.swing.GroupLayout(panelPreview);
        panelPreview.setLayout(panelPreviewLayout);
        panelPreviewLayout.setHorizontalGroup(
            panelPreviewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        panelPreviewLayout.setVerticalGroup(
            panelPreviewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 348, Short.MAX_VALUE)
        );

        lbPreview.setText("[PREVIEW]");

        lbDirectory.setText("DIRECTORY");

        btnBrowser.setText("...");
        btnBrowser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrowserActionPerformed(evt);
            }
        });

        lbExportAs.setText("EXPORT_AS");

        groupExportAs.add(radioTXT);
        radioTXT.setSelected(true);
        radioTXT.setText(".TXT");

        groupExportAs.add(radioPNG);
        radioPNG.setText(".PNG");

        groupExportAs.add(radioGIF);
        radioGIF.setText(".GIF");

        javax.swing.GroupLayout panelRegisterLayout = new javax.swing.GroupLayout(panelRegister);
        panelRegister.setLayout(panelRegisterLayout);
        panelRegisterLayout.setHorizontalGroup(
            panelRegisterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRegisterLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelRegisterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelPreview, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panelRegisterLayout.createSequentialGroup()
                        .addComponent(lbPreview)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelRegisterLayout.createSequentialGroup()
                        .addGroup(panelRegisterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbExportAs)
                            .addComponent(lbDirectory))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                        .addGroup(panelRegisterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelRegisterLayout.createSequentialGroup()
                                .addComponent(txtPathBrowser, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnBrowser))
                            .addGroup(panelRegisterLayout.createSequentialGroup()
                                .addComponent(radioTXT)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(radioPNG)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(radioGIF)))))
                .addContainerGap())
        );
        panelRegisterLayout.setVerticalGroup(
            panelRegisterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelRegisterLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbPreview)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelPreview, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(panelRegisterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPathBrowser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBrowser)
                    .addComponent(lbDirectory))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addGroup(panelRegisterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbExportAs)
                    .addComponent(radioTXT)
                    .addComponent(radioPNG)
                    .addComponent(radioGIF))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelRegister, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelRegister, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(panelButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBrowserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrowserActionPerformed

        JFileChooser chooser = new JFileChooser(dir);
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);

        int option = chooser.showSaveDialog(this);

        if (option == JFileChooser.APPROVE_OPTION) {
            dir = chooser.getSelectedFile();
            txtPathBrowser.setText(dir.getPath());
        }
    }//GEN-LAST:event_btnBrowserActionPerformed

    private void btnExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportActionPerformed

        Database database = Database.getInstance();

        if (grid == null) {
            return;
        }

        Map map = database.getMap();
        File file = null;

        try {
            if (radioTXT.isSelected()) {
                file = new File(dir.getPath() + "/MAP_" + map.getMapId() + ".txt");

                BufferedWriter batch = new BufferedWriter(new FileWriter(file));

                // write description
                batch.write("DESCRIPTION = [");
                batch.newLine();
                batch.write(String.format("%2s : FLOOR,", "0"));
                batch.newLine();
                batch.write(String.format("%2s : WALL,", "1"));
                batch.newLine();
                batch.write(String.format("%2s : PROPERTY", "2"));
                batch.newLine();
                batch.write("]");

                // write space
                batch.newLine();
                batch.newLine();

                // write map
                batch.write("MAP = [");
                batch.newLine();
                for (int y = 0; y < grid.getHeight(); y++) {
                    for (int x = 0; x < grid.getWidth(); x++) {
                        DrawableCell cell = grid.getCell(x, y);

                        DrawableObject object = null;
                        if ((object = cell.getUserObject()) != null) {
                            String id = object.getId();
                            if (id.length() > 2) {
                                batch.write(String.format("%2s", "2"));
                            } else {
                                batch.write(String.format("%2s", "1"));
                            }
                        } else {
                            if (cell.getBackgroundObject() != null) {
                                batch.write(String.format("%2s", "0"));
                            }
                        }
                        if (x < grid.getWidth() - 1 || y < grid.getHeight() - 1) {
                            batch.write(",");
                        }
                    }
                    batch.newLine();
                }
                batch.write("]");
                batch.flush();
                batch.close();

            } else if (radioPNG.isSelected()) {
                file = new File(dir.getPath() + "/MAP_" + map.getMapId() + ".png");
                ImageIO.write(grid.createImage(), "png", file);
            } else if (radioGIF.isSelected()) {
                file = new File(dir.getPath() + "/MAP_" + map.getMapId() + ".gif");
                ImageIO.write(grid.createImage(), "gif", file);
            }

            Desktop.getDesktop().open(file);

        } catch (IOException e) {
            System.err.println(e.getMessage());
        }
    }//GEN-LAST:event_btnExportActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormExport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormExport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormExport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormExport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the dialog
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                FormExport dialog = new FormExport(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBrowser;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnExport;
    private javax.swing.ButtonGroup groupExportAs;
    private javax.swing.JLabel lbDirectory;
    private javax.swing.JLabel lbExportAs;
    private javax.swing.JLabel lbPreview;
    private javax.swing.JPanel panelButton;
    private javax.swing.JPanel panelPreview;
    private javax.swing.JPanel panelRegister;
    private javax.swing.JRadioButton radioGIF;
    private javax.swing.JRadioButton radioPNG;
    private javax.swing.JRadioButton radioTXT;
    private javax.swing.JTextField txtPathBrowser;
    // End of variables declaration//GEN-END:variables
}
