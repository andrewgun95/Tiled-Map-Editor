/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package application.form;

import application.Assets;
import application.Database;
import application.MySQLConnect;
import entities.Monster;
import java.awt.Graphics;
import java.io.File;
import java.util.Timer;
import java.util.TimerTask;
import javax.swing.JComponent;
import javax.swing.JPanel;
import javax.swing.event.TreeSelectionEvent;
import javax.swing.event.TreeSelectionListener;
import javax.swing.plaf.PanelUI;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import utility.Animation;
import utility.ImageLoader;

/**
 *
 * @author 2014130020
 */
public final class FormMonster extends javax.swing.JDialog {

    private String filename;

    /**
     * Creates new form Register
     */
    public FormMonster(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        txtMonsterId.setText(new Monster().getMonsterId());

        createAnimation(60, panelAnimation);
        createDirectory();
        createDirectoryEvent();
    }
    
    private Animation animation;

    private void createAnimation(int fps, final JPanel panel) {
        Timer timer = new Timer();
        timer.scheduleAtFixedRate(new TimerTask() {

            @Override
            public void run() {
                if (animation == null) {
                    return;
                }

                // update animation
                animation.updateAnimation();
                panel.setUI(new PanelUI() {

                    @Override
                    public void paint(Graphics g, JComponent c) {
                        super.paint(g, c);
                        // draw animation
                        g.drawImage(animation.getCurrentImage(), 0, 0, c.getWidth(), c.getHeight(), null);
                    }
                    
                });

                panel.repaint();
            }
        }, 0, 1000 / fps);
    }

    private void createDirectory() {
        final File dir = new File("res/images/monsters");

        DefaultMutableTreeNode root = new DefaultMutableTreeNode(dir.getName());

        File[] files = dir.listFiles();
        for (File file : files) {

            String name = file.getName();

            if (name.contains(ImageLoader.PNG) || name.contains(ImageLoader.JPG) || name.contains(ImageLoader.GIF)) {
                root.add(new DefaultMutableTreeNode(removeExtention(name)));
            }
        }

        dirResource.setModel(new DefaultTreeModel(root));
    }

    private String removeExtention(String filename) {
        int index = filename.lastIndexOf('.');
        if (index > 0) {
            filename = filename.substring(0, index);
        }
        return filename;
    }

    public void createDirectoryEvent() {
        dirResource.addTreeSelectionListener(new TreeSelectionListener() {

            @Override
            public void valueChanged(TreeSelectionEvent e) {
                DefaultMutableTreeNode node = (DefaultMutableTreeNode) dirResource.getLastSelectedPathComponent();

                if (node.isRoot()) {
                    return;
                }

                filename = (String) node.getUserObject();

                animation = new Animation();
                animation.setAnimation(Assets.getInstance().get(filename), true);
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scrollResource = new javax.swing.JScrollPane();
        dirResource = new javax.swing.JTree();
        panelAppearance = new javax.swing.JPanel();
        panelAnimation = new javax.swing.JPanel();
        panelRegister = new javax.swing.JPanel();
        lbMonsterId = new javax.swing.JLabel();
        txtMonsterId = new javax.swing.JTextField();
        lbMonsterName = new javax.swing.JLabel();
        txtMonsterName = new javax.swing.JTextField();
        lbMonsterElement = new javax.swing.JLabel();
        cmbMonsterElement = new javax.swing.JComboBox();
        lbMonsterRarity = new javax.swing.JLabel();
        cmbMonsterRarity = new javax.swing.JComboBox();
        lbMonsterStat = new javax.swing.JLabel();
        panelStatistic = new javax.swing.JPanel();
        lbHealth = new javax.swing.JLabel();
        slideHealth = new javax.swing.JSlider();
        lbHealthInfo = new javax.swing.JLabel();
        lbAttack = new javax.swing.JLabel();
        slideAttack = new javax.swing.JSlider();
        lbAttackInfo = new javax.swing.JLabel();
        lbDefense = new javax.swing.JLabel();
        slideDefense = new javax.swing.JSlider();
        lbDefenseInfo = new javax.swing.JLabel();
        lbXpReward = new javax.swing.JLabel();
        cmbXpReward = new javax.swing.JComboBox();
        lbGpReward = new javax.swing.JLabel();
        cmbGpReward = new javax.swing.JComboBox();
        panelButton = new javax.swing.JPanel();
        btnSubmit = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        scrollResource.setViewportView(dirResource);

        panelAnimation.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        panelAnimation.setPreferredSize(new java.awt.Dimension(64, 64));

        javax.swing.GroupLayout panelAnimationLayout = new javax.swing.GroupLayout(panelAnimation);
        panelAnimation.setLayout(panelAnimationLayout);
        panelAnimationLayout.setHorizontalGroup(
            panelAnimationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 62, Short.MAX_VALUE)
        );
        panelAnimationLayout.setVerticalGroup(
            panelAnimationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 62, Short.MAX_VALUE)
        );

        panelAppearance.add(panelAnimation);

        lbMonsterId.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        lbMonsterId.setText("MONSTER_ID");

        txtMonsterId.setColumns(10);
        txtMonsterId.setEditable(false);

        lbMonsterName.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        lbMonsterName.setText("MONSTER_NAME");

        txtMonsterName.setColumns(10);

        lbMonsterElement.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        lbMonsterElement.setText("MONSTER_ELEMENT");

        cmbMonsterElement.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Fire", "Earth", "Water", "Air", "Spirit" }));

        lbMonsterRarity.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        lbMonsterRarity.setText("MONSTER_RARITY");

        cmbMonsterRarity.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Common", "Uncommon", "Rare", "Epic", "Legend" }));
        cmbMonsterRarity.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbMonsterRarityItemStateChanged(evt);
            }
        });

        lbMonsterStat.setFont(new java.awt.Font("Times New Roman", 1, 10)); // NOI18N
        lbMonsterStat.setForeground(new java.awt.Color(255, 51, 0));
        lbMonsterStat.setText("-");

        panelStatistic.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        panelStatistic.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lbHealth.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        lbHealth.setText("MONSTER_HEALTH");
        panelStatistic.add(lbHealth, new org.netbeans.lib.awtextra.AbsoluteConstraints(78, 7, -1, -1));

        slideHealth.setValue(0);
        slideHealth.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                slideHealthStateChanged(evt);
            }
        });
        panelStatistic.add(slideHealth, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 25, -1, -1));

        lbHealthInfo.setFont(new java.awt.Font("Tahoma", 0, 8)); // NOI18N
        lbHealthInfo.setText("0");
        panelStatistic.add(lbHealthInfo, new org.netbeans.lib.awtextra.AbsoluteConstraints(228, 29, -1, -1));

        lbAttack.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        lbAttack.setText("MONSTER_ATTACK");
        panelStatistic.add(lbAttack, new org.netbeans.lib.awtextra.AbsoluteConstraints(78, 53, -1, -1));

        slideAttack.setValue(0);
        slideAttack.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                slideAttackStateChanged(evt);
            }
        });
        panelStatistic.add(slideAttack, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 71, -1, -1));

        lbAttackInfo.setFont(new java.awt.Font("Tahoma", 0, 8)); // NOI18N
        lbAttackInfo.setText("0");
        panelStatistic.add(lbAttackInfo, new org.netbeans.lib.awtextra.AbsoluteConstraints(228, 75, -1, -1));

        lbDefense.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        lbDefense.setText("MONSTER_DEFENSE");
        panelStatistic.add(lbDefense, new org.netbeans.lib.awtextra.AbsoluteConstraints(77, 99, -1, -1));

        slideDefense.setValue(0);
        slideDefense.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                slideDefenseStateChanged(evt);
            }
        });
        panelStatistic.add(slideDefense, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 117, -1, -1));

        lbDefenseInfo.setFont(new java.awt.Font("Tahoma", 0, 8)); // NOI18N
        lbDefenseInfo.setText("0");
        panelStatistic.add(lbDefenseInfo, new org.netbeans.lib.awtextra.AbsoluteConstraints(228, 121, -1, -1));

        lbXpReward.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        lbXpReward.setText("XP_REWARD");

        cmbXpReward.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "25", "50", "75", "100", "125", "150", "175", "200", "225", "250", "275", "300", "325", "350", "375", "400", "425", "450", "475", "500" }));

        lbGpReward.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        lbGpReward.setText("GP_REWARD");

        cmbGpReward.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "25", "50", "75", "100", "125", "150", "175", "200", "225", "250", "275", "300", "325", "350", "375", "400", "425", "450", "475", "500" }));

        javax.swing.GroupLayout panelRegisterLayout = new javax.swing.GroupLayout(panelRegister);
        panelRegister.setLayout(panelRegisterLayout);
        panelRegisterLayout.setHorizontalGroup(
            panelRegisterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRegisterLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelRegisterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelStatistic, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panelRegisterLayout.createSequentialGroup()
                        .addComponent(lbMonsterId)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtMonsterId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelRegisterLayout.createSequentialGroup()
                        .addComponent(lbMonsterName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtMonsterName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelRegisterLayout.createSequentialGroup()
                        .addComponent(lbXpReward)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cmbXpReward, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lbGpReward)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cmbGpReward, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelRegisterLayout.createSequentialGroup()
                        .addGroup(panelRegisterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbMonsterElement)
                            .addComponent(lbMonsterRarity))
                        .addGap(67, 67, 67)
                        .addGroup(panelRegisterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cmbMonsterElement, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmbMonsterRarity, 0, 86, Short.MAX_VALUE)))
                    .addComponent(lbMonsterStat))
                .addContainerGap())
        );
        panelRegisterLayout.setVerticalGroup(
            panelRegisterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRegisterLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelRegisterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbMonsterId)
                    .addComponent(txtMonsterId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelRegisterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbMonsterName)
                    .addComponent(txtMonsterName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelRegisterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbMonsterElement)
                    .addComponent(cmbMonsterElement, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelRegisterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbMonsterRarity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbMonsterRarity))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lbMonsterStat)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(panelStatistic, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(panelRegisterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbXpReward)
                    .addComponent(lbGpReward)
                    .addComponent(cmbXpReward, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbGpReward, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        panelButton.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnSubmit.setText("Submit");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });
        panelButton.add(btnSubmit);

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });
        panelButton.add(btnCancel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(scrollResource, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(panelAppearance, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(panelRegister, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(panelButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(panelAppearance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(panelRegister, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(scrollResource, javax.swing.GroupLayout.DEFAULT_SIZE, 439, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(panelButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed

        Database database = Database.getInstance();

        // monster identity
        String name = txtMonsterName.getText();
        String element = String.valueOf(cmbMonsterElement.getSelectedItem());
        String rarity = String.valueOf(cmbMonsterRarity.getSelectedItem());
        // monster statistic
        float health = Float.parseFloat(lbHealthInfo.getText());
        float attack = Float.parseFloat(lbAttackInfo.getText());
        float defense = Float.parseFloat(lbDefenseInfo.getText());
        // monster reward
        float xpReward = Float.parseFloat(String.valueOf(cmbXpReward.getSelectedItem()));
        float gpReward = Float.parseFloat(String.valueOf(cmbGpReward.getSelectedItem()));

        database.addMonster(name, element, rarity, health, attack, defense, xpReward, gpReward, filename);

        dispose();
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void slideHealthStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_slideHealthStateChanged

        final float maxHealth = 1000f;

        int health = (int) (maxHealth * ((float) slideHealth.getValue() / 100f));

        lbHealthInfo.setText(String.valueOf(health));
    }//GEN-LAST:event_slideHealthStateChanged

    private void slideAttackStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_slideAttackStateChanged

        final float maxAttack = 1000f;

        int attack = (int) (maxAttack * ((float) slideAttack.getValue() / 100f));

        lbAttackInfo.setText(String.valueOf(attack));
    }//GEN-LAST:event_slideAttackStateChanged

    private void slideDefenseStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_slideDefenseStateChanged

        final float maxDefense = 1000f;

        int defense = (int) (maxDefense * ((float) slideDefense.getValue() / 100f));

        lbDefenseInfo.setText(String.valueOf(defense));
    }//GEN-LAST:event_slideDefenseStateChanged

    private void cmbMonsterRarityItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbMonsterRarityItemStateChanged

        String rarity = String.valueOf(cmbMonsterRarity.getSelectedItem());

        if (rarity.equals("Rare") || rarity.equals("Epic") || rarity.equals("Legend")) {
            lbMonsterStat.setText("CANDIDATE BEING BOSS MONSTER");
        } else {
            lbMonsterStat.setText("-");
        }
    }//GEN-LAST:event_cmbMonsterRarityItemStateChanged

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormMonster.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormMonster.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormMonster.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormMonster.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the dialog
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                FormMonster dialog = new FormMonster(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JComboBox cmbGpReward;
    private javax.swing.JComboBox cmbMonsterElement;
    private javax.swing.JComboBox cmbMonsterRarity;
    private javax.swing.JComboBox cmbXpReward;
    private javax.swing.JTree dirResource;
    private javax.swing.JLabel lbAttack;
    private javax.swing.JLabel lbAttackInfo;
    private javax.swing.JLabel lbDefense;
    private javax.swing.JLabel lbDefenseInfo;
    private javax.swing.JLabel lbGpReward;
    private javax.swing.JLabel lbHealth;
    private javax.swing.JLabel lbHealthInfo;
    private javax.swing.JLabel lbMonsterElement;
    private javax.swing.JLabel lbMonsterId;
    private javax.swing.JLabel lbMonsterName;
    private javax.swing.JLabel lbMonsterRarity;
    private javax.swing.JLabel lbMonsterStat;
    private javax.swing.JLabel lbXpReward;
    private javax.swing.JPanel panelAnimation;
    private javax.swing.JPanel panelAppearance;
    private javax.swing.JPanel panelButton;
    private javax.swing.JPanel panelRegister;
    private javax.swing.JPanel panelStatistic;
    private javax.swing.JScrollPane scrollResource;
    private javax.swing.JSlider slideAttack;
    private javax.swing.JSlider slideDefense;
    private javax.swing.JSlider slideHealth;
    private javax.swing.JTextField txtMonsterId;
    private javax.swing.JTextField txtMonsterName;
    // End of variables declaration//GEN-END:variables
}
